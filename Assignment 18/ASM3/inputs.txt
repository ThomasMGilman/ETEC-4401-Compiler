//-
//52
var x number;
var y number;
var z number;
{
    //simple addition test
    x = 42;
    y = 10;
    z = x+y;
    return z;
}


//-
//fail
var x string;
var y number;
var z number;
{
    //tries to do addition between string and
    //number: Should fail
    x = "foo";
    y = 42;
    z = x+y;
}

//-
//fail
{
    //tries to do subtraction between string and
    //number: Should fail
    var x string;
    var y number;
    var z number;
    
    x = "foo";
    y = 42;
    z = x-y;
}

//-
//fail
var x string;
var y string;
var z string;
{
    //tries to do addition between string and
    //string: Should fail
    x = "foo";
    y = "bar";
    z = x+y;
}

//-
//fail
var x string;
{
    //undeclared variable y
    x = "foo";
    y = 42;
}

//-
//12
var x number;
var y number;
var z number;
var w number;
{
    w = -42;
    x = -w;
    y = 10;
    z = x+y;
    x = z*y/x;
    return x;
}

//-
//15
var x number;
var y number;
var z number;
var main number;
{
    x=4;
    y=5;
    z=6;
    return x+y+z;
}

//-
//56
var x number;
var y number;
var z number;
var w number;
var main number;
{
    w=1;
    x=2;
    y=3;
    z=4;
    return x * (y + z ) * (y + w) ;
}
//-
//55
//fibonacci sequence: Compute fib(10)
var i number;
var v0 number;
var v1 number;
var tmp number;
{
    i=0;
    v0=0;
    v1=1;
    while(i<10){
        tmp = v0+v1;
        v1=v0;
        v0=tmp;
        i = i+1;
    }
    return v0;
}
//-
//6
{
return 2+4;
}
//-
//3
{
return 1+2*3-4;
}
//-
//nonzero
{
return 2+2 and 0 or 7*4;
}
//-
//nonzero
{
return 2+2 or 0 or 7*4;
}
//-
//0
{
return 2+2 and 0 and 7*4;
}
//-
//nonzero
{
return 2 or 4;
}
//-
//nonzero
{
return 0 or 4;
}
//-
//nonzero
{
return 4 or 0;
}
//-
//0
{
return 0 or 0;
}
//-
//nonzero
{
return 3 and 5;
}
//-
//0
{
return 0 and 5;
}
//-
//0
{
return 5 and 0;
}
//-
//0
{
return 0 and 0;
}
//-
//0
{
return not 5;
}
//-
//nonzero
{
return not 0;
}
//-
//0
{
return not 2+3;
}
//-
//nonzero
{
return not 0+0;
}
//-
//7
{
return 3+4;
}
//-
//11
{
return 5+6;
}
//-
//nonzero
{
return 3+4 and 5+6;
}
//-
//0
{
return 1 > 2;
}
//-
//nonzero
{
return 2 > 1;
}
//-
//nonzero
{
return 1 < 2;
}
//-
//0
{
return 2 < 1;
}
//-
//0
{
return 1 == 2;
}
//-
//nonzero
{
return 1 == 1;
}
//-
//nonzero
{
return 1 != 2;
}
//-
//0
{
return 1 != 1;
}
//-
//0
{
return 1 >= 2;
}
//-
//nonzero
{
return 2 >= 1;
}
//-
//nonzero
{
return 1 <= 2;
}
//-
//0
{
return 2 <= 1;
}
//-
//7
{
return 3 + 4;
}
//-
//3
{
return 5 - 2;
}
//-
//12
{
return 3 * 4;
}
//-
//17
{
return 3 * 5 + 2;
}
//-
//17
{
return 2 + 3*5;
}
//-
//11
{
return 3*5-4;
}
//-
//8
{
return 20-3*4;
}
//-
//2
{
return 12/6;
}
//-
//3
{
return -(1-4);
}
//-
//34
{
    if( 12 ){
        return 34;
    } else {
        return 78;
    }
    return 56;
}
//-
//78
{
    if( 0 ){
        return 34;
    } else {
        return 78;
    }
    return 56;
}
//-
//56
{
    if( 0 ){
        return 34;
    } 
    return 56;
}
//-
//12
{
    while( 123 ){
        return 12;
    }
    return 34;
}
//-
//34
{
    while( 0 ){
        return 12;
    }
    return 34;
}
//-
//infinite
{
    while( 1 ){
        if( 0 ) {
            return 1;
        }
    }
}

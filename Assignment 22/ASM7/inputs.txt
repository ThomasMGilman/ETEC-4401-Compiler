
<tests>

<test>
<returns>100</returns>
<code>
<![CDATA[
def main() return number {
    var A number[10];
    A[0]=100;
    return A[0];
}
]]>
</code>
</test>


<test>
<returns>100</returns>
<code>
<![CDATA[

var A number[10];
def main() return number {
    A[0]=100;
    return A[0];
}
]]>
</code>
</test>

<test>
<returns>100</returns>
<output>100 100</output>
<code>
<![CDATA[
var A number[10];
def main() return number {
    A[0]=100;
    print(A[0]);
    print(" ");
    print(A[0]);
    return A[0];
}

]]>
</code>
</test>


<test>
<returns>120</returns>
<code>
<![CDATA[
def main() return number {
    var A number[10];
    A[0]=100;
    A[1]=20;
    return A[0]+A[1];
}

]]>
</code>
</test>

<test>
<returns>123</returns>
<code>
<![CDATA[
def main() return number {
    var A number[10];
    A[0]=100;
    A[1]=20;
    A[2]=3;
    return A[0]+A[1]+A[2];
}
]]>
</code>
</test>

<test>
<returns>100</returns>
<output>0 1 2 
10 11 12 
20 21 22 
30 31 32 
40 41 42 
</output>
<code>
<![CDATA[
def main() return number {
    var A number[5,3];
    var i number;
    var j number;
    i=0;
    while( i < 5 ){
        j = 0;
        while( j < 3 ){
            A[i,j] = i*10+j;
            j = j + 1;
        }
        i = i + 1;
    }
    i=0;
    while( i < 5 ){
        j = 0;
        while( j < 3 ){
            print(A[i,j]);
            print(" ");
            j = j + 1;
        }
        print("\n");
        i = i + 1;
    }   
     
    return 100;
}
]]>
</code>
</test>

<test>
<returns>0</returns>
<output>1 1 2 3 5 8 13 21 34 55 </output>
//fibonacci numbers
<code>
<![CDATA[
def main() return number {
    var A number[10];
    var i number;
    A[0]=1;
    A[1]=1;
    i=2;
    while(i<10){
        A[i] = A[i-1] + A[i-2];
        i = i+1;
    }
    i=0;
    while(i<10){
        print(A[i]);
        print(" ");
        i=i+1;
    }
    return 0;
}
]]>
</code>
</test>

<test>
<returns>5</returns>
<output>1 1 2 3 5 8 13 21 34 55 </output>
<code>
<![CDATA[
//fibonacci numbers
var A number[10];
def main() return number {
    var i number;
    A[0]=1;
    A[1]=1;
    i=2;
    while(i<10){
        A[i] = A[i-1] + A[i-2];
        i = i+1;
    }
    i=0;
    while(i<10){
        print(A[i]);
        print(" ");
        i=i+1;
    }
    return A[4];
}
]]>
</code>
</test>

<test>
<outputs>Foo * Bar * Baz * Bam * Boom
</outputs>
<code>
<![CDATA[
def main() return number {
    var A string[5];
    var i number;
    A[0]="Foo";
    A[1]="Bar";
    A[2]="Baz";
    A[3]="Bam";
    A[4]="Boom";
    i=0;
    while(i<5){
        print(A[i]);
        if( i < 4 ){
            print(" * ");
        }
        i = i + 1;
    }
    print("\n");
    return 0;
}
]]>
</code>
</test>

<test>
<returns>failure</returns>
<code>
<![CDATA[
def main() return number {
    var A number[10];
    var i number;
    i=0;
    while(i<10){
        A[i] = 2*i;
    }
    return foo(A);
} 
def foo(A number[10]) return number{
    var i number;
    var total number;
    i=0;
    total=0;
    while(i<10){
        total = total + A[i];
        i = i + 1;
    }
    return total;
}
]]>
</code>
</test>

</tests>
